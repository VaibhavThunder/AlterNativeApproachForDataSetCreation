for (i in nrow(mf))
{
print(mf[i,]$upper)
}
final = data.frame()
for (i in nrow(mf))
{
print(mf[i,"upper"])
}
for (i in nrow(mf))
{
print(mf[i,"upper"])
}
for (i in nrow(mf))
{
print(mf[i,"lower"])
}
final = data.frame()
for (i in nrow(mf))
{
lower = mf[i, "lower"]
upper = mf[i, "upper"]
for(j in nrow(mf))
{
lowerj = mf[i, "lower"]
upperj = mf[i, "upper"]
final = cbind(grayimage[lower:upper, lowerj:upperj])
}
}
final
dim(final)
tail(grayimage)
final = data.frame()
for (i in nrow(mf))
{
lower = mf[i, "lower"]
upper = mf[i, "upper"]
for(j in nrow(mf))
{
lowerj = mf[i, "lower"]
upperj = mf[i, "upper"]
final = rbind(grayimage[lower:upper, lowerj:upperj])
}
}
final
grayimage
data = readImage("reSizedDogCatLatest.jpg")
grayimage<-channel(data,"gray")
Image(grayimage)
CutBySize <- function(m, block.size, nb = ceiling(m / block.size)) {
int <- m / nb
upper <- round(1:nb * int)
lower <- c(1, upper[-nb] + 1)
size <- c(upper[1], diff(upper))
df = data.frame()
df = cbind(lower, upper, size)
return(df)
}
mf = data.frame()
mf = CutBySize(nrow(grayimage), nb = 32)
mf
final = data.frame()
for (i in nrow(mf))
{
lower = mf[i, "lower"]
upper = mf[i, "upper"]
for(j in nrow(mf))
{
lowerj = mf[i, "lower"]
upperj = mf[i, "upper"]
final = rbind(grayimage[lower:upper, lowerj:upperj])
}
}
final
final
names(final)
dim(final)
library(iterators)
ipeople <- iter(grayimage, by = "row")
nextElem(ipeople)
ipeople <- iter(mf, by = "row")
nextElem(ipeople)
nextElem(ipeople$upper)
nextElem(ipeople$key)
p = nextElem(ipeople)
p$key
$value
ifunc <- iter(function() sample(mf, 1))
lower <- iter(function() sample(mf, 2))
nextElem(ifunc)
nextElem(ifunc)
nextElem(ifunc)
nextElem(ifunc)
nextElem(ifunc)
nextElem(ifunc)
nextElem(ifunc)
nextElem(ifunc)
nextElem(ifunc)
nextElem(ifunc)
nextElem(ifunc)
nextElem(ifunc)
nextElem(ifunc)
for (i in nrow(mf))
{
row = mf[i,] + print(row$upper) + print(row$lower)
}
for (i in nrow(mf))
{
row = mf[i,]
print(row$upper)
}
for (i in nrow(mf))
{
row = mf[i,]
print(row[1])
}
for (i in 1:nrow(mf))
{
row = mf[i,]
print(row[1])
}
for (i in 1:nrow(mf))
{
lower = mf[i, "lower"]
upper = mf[i, "upper"]
for(j in 1:nrow(mf))
{
lowerj = mf[i, "lower"]
upperj = mf[i, "upper"]
final = rbind(grayimage[lower:upper, lowerj:upperj])
}
}
final
dim(final)
for (i in 1:nrow(mf))
{
lower = mf[i, "lower"]
upper = mf[i, "upper"]
for(j in 1:nrow(mf))
{
lowerj = mf[i, "lower"]
upperj = mf[i, "upper"]
final = cbind(grayimage[lower:upper, lowerj:upperj])
}
}
final
final = data.frame()
for (i in 1:nrow(mf))
{
lower = mf[i,][1]
upper = mf[i,][2]
for(j in 1:nrow(mf))
{
lowerj = mf[i,][1]
upperj = mf[i,][2]
final = rbind(grayimage[lower:upper, lowerj:upperj])
}
}
final
final = data.frame()
for (i in 1:nrow(mf))
{
print(mf[i,][1])
print(mf[i,][2])
for(j in 1:nrow(mf))
{
print("second",mf[i,][1])
print("second",mf[i,][2])
}
}
final = data.frame()
for (i in 1:nrow(mf))
{
print(mf[i,][1])
print(mf[i,][2])
}
for (i in 1:nrow(mf))
{
lower = mf[i,][1]
upper = mf[i,][2]
for(j in 1:nrow(mf))
{
print(mf[i,][1])
print(mf[i,][2])
}
}
for (i in 1:nrow(mf))
{
lower = mf[i,][1]
upper = mf[i,][2]
for(j in 1:nrow(mf))
{
print(mf[i,"lower"][1])
print(mf[i,"upper"][2])
}
}
for (i in 1:nrow(mf))
{
lower = mf[i,][1]
upper = mf[i,][2]
for(j in 1:nrow(mf))
{
a = mf[i,][1])
print(a)
}
}
for (i in 1:nrow(mf))
{
lower = mf[i,][1]
upper = mf[i,][2]
for(j in 1:nrow(mf))
{
a = mf[i,][1])
print(a)
}
}
for (i in 1:nrow(mf))
{
lower = mf[i,][1]
upper = mf[i,][2]
for(j in 1:nrow(mf))
{
a = mf[i,][1]
print(a)
}
}
for(i in rows(mf)){
print(i$upper)
}
rows = function(tab) lapply(
seq_len(nrow(tab)),
function(i) unclass(tab[i,,drop=F])
)
for(i in rows(mf)){
print(i$upper)
}
rows = function(x) lapply(seq_len(nrow(x)), function(i) lapply(x,"[",i))
for(i in rows(mf)){
print(i$upper)
}
mf
names(mf)
for(i in rows(mf)){
print(i)
}
for(i in rows(mf)){
print(i[1])
}
dim(mf)
str(mf)
library(stringr)
final = data.frame()
for (i in 1:nrow(mf))
{
print(numextract(mf[i,][1]))
print(numextract(mf[i,][2]))
}
numextract <- function(string){
str_extract(string, "\\-*\\d+\\.*\\d*")
}
final = data.frame()
for (i in 1:nrow(mf))
{
print(numextract(mf[i,][1]))
print(numextract(mf[i,][2]))
}
final = data.frame()
for (i in 1:nrow(mf))
{
lower = numextract(mf[i,][1])
upper = numextract(mf[i,][2])
for(j in 1:nrow(mf))
{
lowerj = numextract(mf[i,][1])
upperj = numextract(mf[i,][2])
final = rbind(grayimage[lower:upper, lowerj:upperj])
}
}
final
dim(final)
for (i in 1:nrow(mf))
{
lower = numextract(mf[i,][1])
upper = numextract(mf[i,][2])
for(j in 1:nrow(mf))
{
print(numextract(mf[i,][1]))
print(numextract(mf[i,][2]))
final = rbind(grayimage[lower:upper, lowerj:upperj])
}
}
for (i in 1:1)
{
lower = numextract(mf[i,][1])
upper = numextract(mf[i,][2])
for(j in 1:nrow(mf))
{
lowerj = numextract(mf[i,][1])
upperj = numextract(mf[i,][2])
final = rbind(grayimage[lower:upper, lowerj:upperj])
}
}
for (i in 1:1)
{
lower = numextract(mf[i,][1])
upper = numextract(mf[i,][2])
for(j in 1:nrow(mf))
{
print(numextract(mf[i,][1]))
print(numextract(mf[i,][2]))
}
}
for (i in 1:1)
{
lower = numextract(mf[i,][1])
upper = numextract(mf[i,][2])
for(j in 1:nrow(mf))
{
print(numextract(mf[j,][1]))
print(numextract(mf[j,][2]))
}
}
final = data.frame()
for (i in 1:nrow(mf))
{
lower = numextract(mf[i,][1])
upper = numextract(mf[i,][2])
for(j in 1:nrow(mf))
{
lowerj = numextract(mf[j,][1])
upperj = numextract(mf[j,][2])
final = rbind(grayimage[lower:upper, lowerj:upperj])
}
}
final
final = data.frame()
for (i in 1:nrow(mf))
{
lower = numextract(mf[i,][1])
upper = numextract(mf[i,][2])
for(j in 1:nrow(mf))
{
lowerj = numextract(mf[j,][1])
upperj = numextract(mf[j,][2])
final = cbind(grayimage[lower:upper, lowerj:upperj])
}
}
final
for (i in 1)
{
lower = numextract(mf[i,][1])
upper = numextract(mf[i,][2])
for(j in 1:nrow(mf))
{
lowerj = numextract(mf[j,][1])
upperj = numextract(mf[j,][2])
final = cbind(grayimage[lower:upper, lowerj:upperj])
}
}
final
grayimage[1:8,1:8]
grayimage[1:8,9:16]
for (i in 1)
{
lower = numextract(mf[i,][1])
upper = numextract(mf[i,][2])
for(j in 1:nrow(mf))
{
lowerj = numextract(mf[j,][1])
upperj = numextract(mf[j,][2])
final = rbind(final,grayimage[lower:upper, lowerj:upperj])
}
}
final
fim(final)
dim(final)
final = data.frame()
for (i in nrow(mf))
{
lower = numextract(mf[i,][1])
upper = numextract(mf[i,][2])
for(j in 1:nrow(mf))
{
lowerj = numextract(mf[j,][1])
upperj = numextract(mf[j,][2])
final = rbind(final,grayimage[lower:upper, lowerj:upperj])
}
}
dim(final)
final
for (i in 1)
{
lower = numextract(mf[i,][1])
upper = numextract(mf[i,][2])
for(j in 1:nrow(mf))
{
lowerj = numextract(mf[j,][1])
upperj = numextract(mf[j,][2])
final = rbind(final,grayimage[lower:upper, lowerj:upperj])
}
}
final = data.frame()
for (i in 1)
{
lower = numextract(mf[i,][1])
upper = numextract(mf[i,][2])
for(j in 1:nrow(mf))
{
lowerj = numextract(mf[j,][1])
upperj = numextract(mf[j,][2])
final = rbind(final,grayimage[lower:upper, lowerj:upperj])
}
}
final
dim(final)
final = data.frame()
for (i in 1:nrow(mf))
{
lower = numextract(mf[i,][1])
upper = numextract(mf[i,][2])
for(j in 1:nrow(mf))
{
lowerj = numextract(mf[j,][1])
upperj = numextract(mf[j,][2])
final = rbind(final,grayimage[lower:upper, lowerj:upperj])
}
}
dim(final)
final
final = data.frame()
for (i in 2)
{
lower = numextract(mf[i,][1])
upper = numextract(mf[i,][2])
for(j in 1:nrow(mf))
{
lowerj = numextract(mf[j,][1])
upperj = numextract(mf[j,][2])
final = rbind(final,grayimage[lower:upper, lowerj:upperj])
}
}
dim(final)
for (i in 1:3)
{
lower = numextract(mf[i,][1])
upper = numextract(mf[i,][2])
for(j in 1:nrow(mf))
{
lowerj = numextract(mf[j,][1])
upperj = numextract(mf[j,][2])
final = rbind(final,grayimage[lower:upper, lowerj:upperj])
}
}
final = data.frame()
for (i in 1:3)
{
lower = numextract(mf[i,][1])
upper = numextract(mf[i,][2])
for(j in 1:nrow(mf))
{
lowerj = numextract(mf[j,][1])
upperj = numextract(mf[j,][2])
final = rbind(final,grayimage[lower:upper, lowerj:upperj])
}
}
dim(final)
grayimage
mf = CutBySize(nrow(grayimage), nb = 32)
mf
final = data.frame()
for (i in 1:nrow(mf))
{
lower = numextract(mf[i,][1])
upper = numextract(mf[i,][2])
for(j in 1:nrow(mf))
{
lowerj = numextract(mf[j,][1])
upperj = numextract(mf[j,][2])
final = rbind(final,grayimage[lower:upper, lowerj:upperj])
}
}
numextract <- function(string){
str_extract(string, "\\-*\\d+\\.*\\d*")
}
final = data.frame()
for (i in 1:nrow(mf))
{
lower = numextract(mf[i,][1])
upper = numextract(mf[i,][2])
for(j in 1:nrow(mf))
{
lowerj = numextract(mf[j,][1])
upperj = numextract(mf[j,][2])
final = rbind(final,grayimage[lower:upper, lowerj:upperj])
}
}
library(stringr)
final = data.frame()
for (i in 1:nrow(mf))
{
lower = numextract(mf[i,][1])
upper = numextract(mf[i,][2])
for(j in 1:nrow(mf))
{
lowerj = numextract(mf[j,][1])
upperj = numextract(mf[j,][2])
final = rbind(final,grayimage[lower:upper, lowerj:upperj])
}
}
final
dim(final)
display(grayimage)
